---
- name: Install some basic system necessities first
  apt:
    pkg:
    - zsh
    - zsh-common
    - zsh-autosuggestions
    - zsh-syntax-highlighting
    - zplug
    - neovim
    - rxvt-unicode
    - sysstat
    - htop
    - atop
    - git
    - rdesktop
    - openvpn
    - python-dev
    - gimp
    - inkscape
    - sqlite3
    - sqlite3-doc
    - imagemagick
    - grass
    - spatialite-gui
    - spatialite-bin
    - qgis
    - pandoc
    - texlive-latex-base
    - texlive-latex-recommended
    - texlive-latex-extra
    - texlive-fonts-recommended
    - xclip
    - xsel
    - yank
    - fonts-noto
    - fonts-mplus
    - filezilla
    - gummi
    - texmaker
    - wireshark
    - cifs-utils
    - meld
    - thefuck
    - python3-selinux
    - firejail
    - firejail-profiles
    - colordiff
    - fd-find
    - pylint
    - pulseaudio
    - pasystray
    - pulseaudio-utils
    - pulseeffects
    - btop
    - tldr
    - zoxide
    - nala
    - tmux


- name: Download and install dependencies for stuff later on
  apt:
    pkg:
      - gcc-10-base
      - libgcc-10-dev

- name: Check if Veles is installed
  command: dpkg-query -l veles
  register: veles_check
  ignore_errors: yes

- name: Download and install Veles
  apt:
    deb: https://github.com/codilime/veles/releases/download/2018.05.0.TIF/Veles_2018.05_64bit_Ubuntu1604.deb
  when: ansible_userspace_architecture == 'x86_64' and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == "Parrot GNU/Linux") and veles_check.stdout.find('no packages found') == -1
  tags: veles

- name: Check if Min is installed
  command: dpkg-query -l min
  register: min_check
  ignore_errors: yes

- name: Download and install Min (web browser)
  apt:
    deb: https://github.com/minbrowser/min/releases/download/v1.16.0/min_1.16.0_amd64.deb
  when: ansible_userspace_architecture == 'x86_64' and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == "Parrot GNU/Linux") and min_check.stdout.find('no packages found') == -1
  tags: min

- name: Check if Didscord is installed
  command: dpkg-query -l discord
  register: discord_check
  ignore_errors: yes

- name: Download and install Discord
  apt:
    deb: https://discord.com/api/download?platform=linux&format=deb
  when: ansible_userspace_architecture == 'x86_64' and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == "Parrot GNU/Linux") and discord_check.stdout.find('no packages found') == -1
  tags: discord

- name: Download lf
  become: no
  get_url:
    url: https://github.com/gokcehan/lf/releases/download/r17/lf-linux-amd64.tar.gz
    dest: /home/{{ ansible_user }}/Downloads/lf-linux-amd64.tar.gz
    checksum: sha256:1512EA940DEE831BCCC918FA804059D76837B7758A0A2AF6B5E6C8A616B8B864
  tags: lf

- name: Insall lf
  become: yes
  become_user: root
  unarchive:
    src: "/home/{{ ansible_user }}/Downloads/lf-linux-amd64.tar.gz"
    dest: /usr/local/bin
  tags: lf

- name: Change ownership of lf, group and permissions
  file:
    path: /usr/local/bin/lf
    owner: root
    group: staff
    mode: '0755'
  tags: lf

- name: Set up .zshrc
  become: no
  template:
    dest: "/home/{{ ansible_user }}/.zshrc"
    src: zshrc.j2
    backup: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags: [zshrc, zsh]

- name: Deploy aliasrc
  become: no
  template:
    dest: "/home/{{ ansible_user }}/.config/aliasrc"
    src: aliasrc.j2
    backup: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags: [aliasrc, zsh]

- name: Deploy shortcutrc
  become: no
  template:
    dest: "/home/{{ ansible_user }}/.config/shortcutrc"
    src: shortcutrc.j2
    backup: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags: [shortcutrc, zsh]

- name: create .zsh dir
  become: no
  file:
    path: "/home/{{ ansible_user }}/.zsh"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: create .zplug dir
  become: no
  file:
    path: "/home/{{ ansible_user }}/.zplug"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags: [zplug, zsh]

- name: create .zplug dir and copy all the necessary files into it
  command: "cp -r /usr/share/zplug/ /home/{{ ansible_user }}/.zplug/"
  tags: [zplug, zsh]

- name: Let's get some security things installed
  apt:
    pkg:
      - libgoogle-perftools-dev
      - libpam-tmpdir
      - apt-listbugs
      - debsecan
      - debsums
      - fail2ban
      - libpam-passwdqc
      - needrestart
      - nftables

- name: Set LD_PRELOAD
  lineinfile:
    dest: /etc/environment
    state: present
    regexp: '^LD_PRELOAD'
    line: 'LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libtcmalloc.so.4'

- name: Change permissions of redis-openvas.conf to make it world unreadable
  file:
    path: /etc/redis/redis-openvas.conf
    owner: redis
    group: redis
    mode: '0640'
  tags: redis

